"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _core=require("../build/index"),_minimist=_interopRequireDefault(require("minimist"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return _getRequireWildcardCache=function(){return e},e}function _interopRequireWildcard(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=_getRequireWildcardCache();if(r&&r.has(e))return r.get(e);var o={},t=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var n=t?Object.getOwnPropertyDescriptor(e,i):null;n&&(n.get||n.set)?Object.defineProperty(o,i,n):o[i]=e[i]}return o.default=e,r&&r.set(e,o),o}function asyncGeneratorStep(e,r,o,t,i,n,l){try{var c=e[n](l),s=c.value}catch(e){return void o(e)}c.done?r(s):Promise.resolve(s).then(t,i)}function _asyncToGenerator(e){return function(){var r=this,o=arguments;return new Promise((function(t,i){function n(e){asyncGeneratorStep(c,t,i,n,l,"next",e)}function l(e){asyncGeneratorStep(c,t,i,n,l,"throw",e)}var c=e.apply(r,o);n(void 0)}))}}var _default=_asyncToGenerator((function*(){const e=yield Promise.resolve().then(()=>_interopRequireWildcard(require("acorn"))),r=yield Promise.resolve().then(()=>_interopRequireWildcard(require("fs"))),o=yield Promise.resolve().then(()=>_interopRequireWildcard(require("path"))),t=(0,_minimist.default)(process.argv.slice(2),{alias:{m:"mode",t:"test",v:"version",o:"out",n:"not",op:"optimisation"}}),i=null==e?void 0:e.parse((0,_core.read)(o.resolve(o.resolve(process.argv[2]))),{ecmaVersion:"latest",allowAwaitOutsideFunction:!0,allowImportExportEverywhere:!0,allowReserved:!0});if(t.v&&(yield _asyncToGenerator((function*(){const e=yield Promise.resolve().then(()=>_interopRequireWildcard(require("./../package.json")));console.log(e.version)}))()),!t._[0])return 0;let n="jstc_build";if(t.o&&("string"==typeof t.o?n=t.o:console.log("引数が不足しています")),(0,_core.check)(o.resolve(n))||r.mkdir(o.resolve(n),e=>{if(e)throw e}),!t.not){let e;"string"==typeof t.m?(e=t.m,"py"==e||"python"==e?(e="python",yield _asyncToGenerator((function*(){const{python:l}=yield Promise.resolve().then(()=>_interopRequireWildcard(require("../build/index")));let c=new l({codes:i,mode:e,option:{optimisation:t.op}});r.writeFileSync("".concat(o.resolve(n),"/index.py"),c.parse.code,"utf8"),console.log(c.parse.code)}))()):"rb"==e||"ruby"==e?(e="ruby",yield _asyncToGenerator((function*(){const{ruby:l}=yield Promise.resolve().then(()=>_interopRequireWildcard(require("../build/index")));let c=new l({codes:i,mode:e,option:{optimisation:t.op}});r.writeFileSync("".concat(o.resolve(n),"/index.rb"),c.parse.code,"utf8"),console.log(c.parse.code)}))()):yield _asyncToGenerator((function*(){const{python:e}=yield Promise.resolve().then(()=>_interopRequireWildcard(require("../build/index")));let l=new e({codes:i,mode:"python",option:{optimisation:t.op}});r.writeFileSync("".concat(o.resolve(n),"/index.py"),l.parse.code,"utf8"),console.log(l.parse.code)}))()):console.log("引数が不足しています")}return t.t&&r.writeFileSync(o.resolve("".concat(o.resolve(n),"/build.json")),i?JSON.stringify(i):"{}","utf8"),0}));exports.default=_default;